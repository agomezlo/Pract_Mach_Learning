{"name":"Pract mach learning","tagline":"Coursera Practical Machine Learning. Project write up.","body":"**Practice Machine Learning Writeup*\r\n\r\n## Load the data\r\n    training<- read.csv(\"~/Desktop/.../pml-training.csv\", na.strings=c(\"\",\"NA\",\"#DIV/0!\"))\r\n    testing<- read.csv(\"~/Desktop/.../pml-testing.csv\")\r\n\r\n## Select useful features\r\n\r\n    user<-grep(\"user\",names(training), value=FALSE) \r\n    belt<-grep(\"belt\",names(training), value=FALSE) \r\n    arm<-grep(\"[^fore]arm\",names(training), value=FALSE)\r\n    forearm<-grep(\"forearm\",names(training), value=FALSE)\r\n    dumbbell<-grep(\"dumbbell\",names(training), value=FALSE)\r\n    classe<-grep(\"classe\",names(training), value=FALSE)\r\n\r\n    training<-training[,c(user,belt, arm, forearm, dumbbell, classe)]\r\n    testing<-testing[,c(user,belt, arm, forearm, dumbbell, classe)]\r\n\r\n## Cleaning the data\r\nRemove variables which contain just NA vales.\r\n\r\n    training<-training[,apply(apply(training,2,is.na),2,sum)==0]\r\n    testing<-testing[,apply(apply(testing,2,is.na),2,sum)==0]\r\n\r\n## Building some models: getting the best accuracy.\r\n\r\n    mod1 <- train(classe ~.,method=\"lda\",data=train)\r\n    pred1<-predict(mod1,test)\r\n    confusionMatrix(pred1, test$classe) # Accuracy : 0.7276 \r\n\r\n    mod2 <- train(classe ~.,method=\"svmLinear\",data=train) # support vector machine\r\n    pred2<-predict(mod2,test)\r\n    confusionMatrix(pred2, test$classe) # Accuracy : 0.8034\r\n\r\n    mod3 <- train(classe ~.,method=\"gbm\",data=train) # boosting\r\n    pred3<-predict(mod3,test)\r\n    confusionMatrix(pred3, test$classe) # Accuracy : 0.9601 \r\n\r\n    mod4 <- train(classe ~.,method=\"pcaNNet\",data=train) # Neural Networks with Feature Extraction\r\n    pred4<-predict(mod4,test)\r\n    confusionMatrix(pred4, test$classe) # Accuracy : 0.6348\r\n\r\n    mod5 <- train(classe ~.,method=\"rpart\",data=train) # model based tree\r\n    pred5<-predict(mod5,test)\r\n    confusionMatrix(pred5, test$classe) # Accuracy : 0.4748 \r\n\r\n    mod6 <- train(classe ~.,method=\"rf\",data=train, trControl=trainControl(method=\"cv\"), number=3) # RF\r\n    pred6<-predict(mod6,test)\r\n    confusionMatrix(pred6, test$classe) # Accuracy : 0.9925  \r\n\r\n## Model which combine predictors.\r\n\r\n    predDF <- data.frame(pred1,pred2,pred3,pred4,pred5,pred6, classe=test$classe)\r\n    combModFit <- train(classe ~.,method=\"gbm\",data=predDF) # the new model\r\n    combPred <- predict(combModFit,newdata=predDF)\r\n    confusionMatrix(combPred, test$classe) # Accuracy : 0.9925 \r\n\r\nAs can be appreciated, the accuracy obtained after combining some models does not improve the accuracy obtained using Random Forest. That is the reason the model 6 which use Randon Forest will be used instead of the combination of models.\r\n\r\n## Final prediction on the test set\r\n\r\n    predict(mod6,testing) \r\n\r\n## Obtained results\r\n\r\n    predict(mod6,testing) \r\n    B A B A A E D B A A B C B A E E A B B B\r\n    Levels: A B C D E\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}